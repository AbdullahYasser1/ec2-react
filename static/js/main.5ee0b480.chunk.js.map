{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","handlChange","event","name","target","value","setState","handleSubmit","preventDefult","state","user","pass","msg","onSubmit","this","type","onChange","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAwCeA,E,kDArCb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAGRC,YAAc,SAACC,GACb,IAAIC,EAAOD,EAAME,OAAOD,KACpBE,EAAQH,EAAME,OAAOC,MACzB,EAAKC,SAAL,eAAgBH,EAAME,KAPN,EASlBE,aAAa,SAACL,GACZA,EAAMM,gBACc,YAAjB,EAAKC,MAAMC,MAAqC,OAAjB,EAAKD,MAAME,KAC3C,EAAKL,SAAS,CAACM,IAAI,uBAEnB,EAAKN,SAAS,CAACM,IAAI,4BAZrB,EAAKH,MAAQ,CAACC,KAAK,GAAKC,KAAK,GAAKC,IAAI,IAFtB,E,0CAkBlB,WACE,OACE,gCACE,uBAAMC,SAAYC,KAAKP,aAAvB,UACE,6CACA,uBAAOQ,KAAK,OAAOZ,KAAK,OAAOa,SAAUF,KAAKb,cAAc,uBAC5D,6CACA,uBAAOc,KAAK,WAAWZ,KAAK,OAAOa,SAAUF,KAAKb,cAAc,uBAChE,uBAAOc,KAAK,SAASV,MAAM,WAAU,uBACrC,uBAAOU,KAAK,QAAQV,MAAM,UAAS,0BAGrC,uBACCS,KAAKL,MAAMG,W,GAhCFK,aCUHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5ee0b480.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {user:\"\" , pass:\"\" , msg:\"\"};\n  }\n  handlChange = (event) =>{\n    let name = event.target.name;\n    let value = event.target.value;\n    this.setState({[name]:value});\n  }\n  handleSubmit=(event)=>{\n    event.preventDefult();\n    if(this.state.user==\"Abdullah\" && this.state.pass==\"123\"){\n      this.setState({msg:\"successfully login\"});\n    }else{\n      this.setState({msg:\"failure try once again\"});\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit = {this.handleSubmit}>\n          <label>UserName</label>\n          <input type=\"text\" name=\"user\" onChange={this.handlChange}/><br/>\n          <label>Password</label>\n          <input type=\"password\" name=\"pass\" onChange={this.handlChange}/><br/>\n          <input type=\"submit\" value=\"submit\"/><br/>\n          <input type=\"reset\" value=\"reset\"/><br/>\n          \n        </form>\n        <br/>\n        {this.state.msg}\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}